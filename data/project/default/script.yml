#*********************************************************************
# content   = scripts
# date      = 2024-11-12
#
# license   = MIT <https://github.com/alexanderrichtertd>
# author    = Alexander Richter <alexanderrichtertd.com>
#*********************************************************************

# seperate with comma: save,report

# active:   True|False
# software: os, maya, max, nuke, houdini, c4d, blender


#*********************************************************************
arUtil:
  active: True

  progress_color:
    - lightblue   # 0-neutral
    - lightgreen  # 1-done
    - orange      # 2-warning
    - red         # 3-failed

  progress_img:
    - btn/btn_write
    - btn/btn_accept
    - btn/btn_warning
    - btn/btn_denial


#*********************************************************************
arNotice:
  active: True
  timer:  7


#*********************************************************************
arSave:
  active: True
  start:  &arSave import arSave; arSave.start()
  img:    &arSave_img png, jpg, tiff
  just_screenshot: True


#*********************************************************************
arLoad:
  active: True
  img:    *arSave_img


#*********************************************************************
arDesktop:
  active:     True
  auto_start: True
  style:      "color: rgb(200, 200, 200);background-color: rgb(26, 30, 33);selection-background-color: rgb(60, 110, 190);"

  SOFTWARE:
    maya:    self.press_btnOpenMaya
    max:     self.press_btnOpenMax
    nuke:    self.press_btnOpenNuke
    houdini: self.press_btnOpenHoudini


#*********************************************************************
arWrite:
  active: True
  renderthreads: 12


#*********************************************************************
smartLoader:
  active:   True
  start:    &smartLoader import arSave; arSave.start()
  shortcut: F1
  ignore:
  favourite:

  # priority order
  CONTENT:
    SHOTS:  Tank().data_project['PATH']['shots']
    ASSETS: Tank().data_project['PATH']['assets']

    SCRIPTS:
      arSave: *arSave
      Report: import pipefunc; pipefunc.help('report')
      Help:   import pipefunc; pipefunc.help()

    SOFTWARE:
      maya:    Tank().data_software['MAYA']['start']
      nuke:    Tank().data_software['NUKE']['start']
      max:     Tank().data_software['MAX']['start']
      houdini: Tank().data_software['HOUDINI']['start']



achievement:
  active: True

  # pipeline kid
  script_report:
    - 20
    - 100
    - 500

  # unbreakable
  script_crash:
    - 20
    - 100
    - 500
